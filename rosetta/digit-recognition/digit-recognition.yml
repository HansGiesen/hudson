include: ../../cfg.yml

# Name of project and program for the tuning database
project_name: rosetta
program_name: digit-recognition

# Prefix used for jobs in grid engine
job_name: digit-recognition

# Generated executable file
exe_file: DigitRec.elf

# Top-level function of accelerator
accel_func: DigitRec

# Directory with all sources that must be copied for a local run
src_dir: src

# HLS source files
hls_src_files:
- sdsoc/digitrec.cpp
- sdsoc/swap.cpp
- sdsoc/sorting_network.cpp

# HLS header files
hls_hdr_files:
- sdsoc/digitrec.h

# Other C/C++ Source files
src_files:
- host/digit_recognition.cpp
- host/check_result.cpp
- host/utils.cpp

# Generated include file with allocation functions
inc_file: host/hudson.h

# Optional script to generate source files
src_gen: sdsoc/gen_sortnet.py

# Compiler options
cflags: '-DSDSOC -I {project_dir}/196data'

# Linker options
ldflags: ''

# Add debug symbols
debug: true

# Optimization level
opt_level: 3

# Command-line arguments for run on platform
run_args: ''
    
# Timeouts in minutes
timeouts:
  presynth: 120
  synth:    120
  impl:     120
  run:      10
  
# Memory requirements in GB
max_mem:
  presynth: 8
  synth:    32
  impl:     32
  run:      1

# List of arrays that are passed to or from accelerators
arrays:
  DigitRec:
    global_training_set: {size: "NUM_TRAINING / 2", alloc: alloc_training_set, free: free_training_set}
    global_test_set:     {size: "NUM_TEST", alloc: alloc_test_set, free: free_test_set}
    global_results:      {size: "NUM_TEST", alloc: alloc_results, free: free_results}

# User-defined parameters
params:
  PAR_FACTOR:   {type: Integer, args: '1, 16'}
  BITONIC_SORT: {type: Boolean}
  SWAP_CNT:     {type: Integer, args: '1, 1024'}
